#include "CompileInfo.h"

namespace smtrat 
{

const std::string CompileInfo::SystemName = "@CMAKE_SYSTEM_NAME@";
const std::string CompileInfo::SystemVersion = "@CMAKE_SYSTEM_VERSION@";
const std::string CompileInfo::BuildType = "@CMAKE_BUILD_TYPE@";
const std::string CompileInfo::CXXCompiler = "@CMAKE_CXX_COMPILER@";
const std::string CompileInfo::CXXCompilerVersion = "@CMAKE_CXX_COMPILER_VERSION@";
const std::string CompileInfo::GitRevisionSHA1 = "@GIT_SHA1@";
const std::string CompileInfo::PackageName = "@PROJECT_NAME@";
const std::string CompileInfo::ProjectName = "@PROJECT_FULLNAME@";
const std::string CompileInfo::Version = "@PROJECT_VERSION@";
const std::string CompileInfo::Website = "https://github.com/smtrat/smtrat/wiki";
const std::string CompileInfo::GitVersion = "@PROJECT_VERSION_FULL@";

std::ostream& operator<<(std::ostream& os, CMakeOptionPrinter cmop) {
	auto print = [&os,&cmop](bool advanced, const std::string& type, const std::string& key, const std::string& value) {
		if (advanced && !cmop.advanced) return;
		if (type.empty()) return;
		if (key.empty()) return;
		if (key[0] == '_') return;
		if (value.find('\n') == std::string::npos) {
			os << key << " = " << value << std::endl;
		} else {
			os << key << " has multiple lines." << std::endl;
		}
	};

	${VARLIST}

	return os;
}

}