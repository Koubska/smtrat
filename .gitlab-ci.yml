image: registry.git.rwth-aachen.de/ths/smt/smtrat/ci:latest

#Verschiedene für jeden Job und Branches -> Erste Pipeline in einem neuen Branch wird lange dauern
#Für alle Jobs der gleiche Cache klappt leider nicht, da diese bei verschiedenen Compilern neu compiliert werden müssen
cache: 
  key: ${CI_JOB_NAME}-${CI_COMMIT_REF_SLUG}
  paths:
    - build/resources/
  policy: pull-push

variables:
  DOCKER_TLS_CERTDIR: "" #do not change, needed for docker in docker (quality)


stages:
  - build-gcc
  - build-clang #Carl Singleton redefinition Todo
  #- test #Todo
  - quality
  - documentation


build-gcc10:
  stage: build-gcc
  script:
     - export CC=/usr/bin/gcc-10 && export CXX=/usr/bin/g++-10
     - TASK=getCarl BRANCH_NAME=${CI_COMMIT_BRANCH} JOB_NAME=${CI_JOB_NAME} TOKEN=${CARL_READONLY_TOKEN} source .ci/build.sh
     - TASK=parallel MAKE_PARALLEL=-j6 source .ci/build.sh

build-gcc9:
  stage: build-gcc
  script:
     - export CC=/usr/bin/gcc-9 && export CXX=/usr/bin/g++-9
     - TASK=getCarl BRANCH_NAME=${CI_COMMIT_BRANCH} JOB_NAME=${CI_JOB_NAME} TOKEN=${CARL_READONLY_TOKEN} source .ci/build.sh
     - TASK=parallel MAKE_PARALLEL=-j6 source .ci/build.sh
  only:
     - development

build-gcc8:
  stage: build-gcc
  script:
     - export CC=/usr/bin/gcc-8 && export CXX=/usr/bin/g++-8
     - TASK=getCarl BRANCH_NAME=${CI_COMMIT_BRANCH} JOB_NAME=${CI_JOB_NAME} TOKEN=${CARL_READONLY_TOKEN} source .ci/build.sh
     - TASK=parallel MAKE_PARALLEL=-j6  source .ci/build.sh
  only:
     - development

build-clang11:
  stage: build-clang
  script:
     - export CC=/usr/bin/clang-11 && export CXX=/usr/bin/clang++-11
     - TASK=getCarl BRANCH_NAME=${CI_COMMIT_BRANCH} JOB_NAME=${CI_JOB_NAME} TOKEN=${CARL_READONLY_TOKEN} source .ci/build.sh
     - TASK=parallel MAKE_PARALLEL=-j6  source .ci/build.sh

build-clang10:
  stage: build-clang
  script:
     - export CC=/usr/bin/clang-10 && export CXX=/usr/bin/clang++-10
     - TASK=getCarl BRANCH_NAME=${CI_COMMIT_BRANCH} JOB_NAME=${CI_JOB_NAME} TOKEN=${CARL_READONLY_TOKEN} source .ci/build.sh
     - TASK=parallel MAKE_PARALLEL=-j6  source .ci/build.sh
  only:
     - development

build-clang9:
  stage: build-clang
  script:
     - export CC=/usr/bin/clang-9 && export CXX=/usr/bin/clang++-9
     - TASK=getCarl BRANCH_NAME=${CI_COMMIT_BRANCH} JOB_NAME=${CI_JOB_NAME} TOKEN=${CARL_READONLY_TOKEN} source .ci/build.sh
     - TASK=parallel MAKE_PARALLEL=-j6 source .ci/build.sh
  only:
     - development

code_quality:
  dependencies: []
  stage: quality
  cache: {}
  image: docker:stable
  allow_failure: true
  services:
    - docker:stable-dind
  script:
    - docker run
        --env SOURCE_CODE="$PWD"
        --volume "$PWD":/code
        --volume /var/run/docker.sock:/var/run/docker.sock
        "registry.gitlab.com/gitlab-org/security-products/codequality" /code
  artifacts:
    reports: 
      codequality: gl-code-quality-report.json


docs:
  stage: documentation
  cache: {}
  script:
    - MAKE_PARALLEL=-j4 TASK=documentation source .ci/build.sh
  only:
    - master

### UNUSED ###
#tidy-clang:
#  cache: {}
#  script:
#    - MAKE_PARALLEL=-j4 TASK=tidy source .ci/build.sh
#  except:
#    - master
