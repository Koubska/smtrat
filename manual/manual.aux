\relax 
\providecommand\HyperFirstAtBeginDocument{\AtBeginDocument}
\HyperFirstAtBeginDocument{\ifx\hyper@anchor\@undefined
\global\let\oldcontentsline\contentsline
\gdef\contentsline#1#2#3#4{\oldcontentsline{#1}{#2}{#3}}
\global\let\oldnewlabel\newlabel
\gdef\newlabel#1#2{\newlabelxx{#1}#2}
\gdef\newlabelxx#1#2#3#4#5#6{\oldnewlabel{#1}{{#2}{#3}}}
\AtEndDocument{\ifx\hyper@anchor\@undefined
\let\contentsline\oldcontentsline
\let\newlabel\oldnewlabel
\fi}
\fi}
\global\let\hyper@last\relax 
\gdef\HyperFirstAtBeginDocument#1{#1}
\providecommand\HyField@AuxAddToFields[1]{}
\@writefile{toc}{\contentsline {chapter}{\numberline {1}Introduction}{3}{chapter.1}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\@writefile{lol}{\addvspace {10\p@ }}
\newlabel{chapter:intro}{{1}{3}{Introduction\relax }{chapter.1}{}}
\@writefile{toc}{\contentsline {chapter}{\numberline {2}Installation}{5}{chapter.2}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\@writefile{lol}{\addvspace {10\p@ }}
\newlabel{chapter:installation}{{2}{5}{Installation\relax }{chapter.2}{}}
\@writefile{toc}{\contentsline {section}{\numberline {2.1}Requirements}{5}{section.2.1}}
\@writefile{toc}{\contentsline {section}{\numberline {2.2}Building, installing and uninstalling \texttt  {SMT-RAT}\xspace  }{5}{section.2.2}}
\@writefile{toc}{\contentsline {chapter}{\numberline {3}General framework of \texttt  {SMT-RAT}\xspace  }{7}{chapter.3}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\@writefile{lol}{\addvspace {10\p@ }}
\newlabel{chapter:generalframework}{{3}{7}{General framework of \smtrat \relax }{chapter.3}{}}
\@writefile{toc}{\contentsline {section}{\numberline {3.1}The \texttt  {Formula}\xspace  class}{7}{section.3.1}}
\@writefile{toc}{\contentsline {section}{\numberline {3.2}The \texttt  {Module}\xspace  class}{7}{section.3.2}}
\@writefile{lof}{\contentsline {figure}{\numberline {\relax 3.1}{\ignorespaces A snapshot of an \texttt  {SMT-RAT}\xspace  composition embedded in an SMT solver.}}{8}{figure.3.1}}
\newlabel{fig:framework}{{\relax 3.1}{8}{A snapshot of an \smtrat composition embedded in an SMT solver}{figure.3.1}{}}
\@writefile{toc}{\contentsline {section}{\numberline {3.3}The \texttt  {Strategy}\xspace  class}{8}{section.3.3}}
\@writefile{toc}{\contentsline {section}{\numberline {3.4}The \texttt  {Manager}\xspace  class}{8}{section.3.4}}
\@writefile{toc}{\contentsline {chapter}{\numberline {4}Embedding of a theory solver into an SMT solver}{9}{chapter.4}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\@writefile{lol}{\addvspace {10\p@ }}
\newlabel{chapter:embeddingats}{{4}{9}{Embedding of a theory solver into an SMT solver\relax }{chapter.4}{}}
\@writefile{toc}{\contentsline {section}{\numberline {4.1}Interfaces of a theory solver composed with \texttt  {SMT-RAT}\xspace  }{9}{section.4.1}}
\@writefile{toc}{\contentsline {section}{\numberline {4.2}Example: Embedding a \texttt  {SMT-RAT}\xspace  composition into \texttt  {OpenSMT}\xspace  }{10}{section.4.2}}
\@writefile{lof}{\contentsline {figure}{\numberline {\relax 4.1}{\ignorespaces The header implementation of a theory solver used by \texttt  {OpenSMT}\xspace  .}}{13}{figure.4.1}}
\newlabel{fig:headernrasolver}{{\relax 4.1}{13}{The header implementation of a theory solver used by \opensmt }{figure.4.1}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {\relax 4.2}{\ignorespaces The constructor of a theory solver used by \texttt  {OpenSMT}\xspace  .}}{14}{figure.4.2}}
\newlabel{fig:constructornrasolver}{{\relax 4.2}{14}{The constructor of a theory solver used by \opensmt }{figure.4.2}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {\relax 4.3}{\ignorespaces The method to inform the theory solver used by \texttt  {OpenSMT}\xspace  about a constraint.}}{14}{figure.4.3}}
\newlabel{fig:informnrasolver}{{\relax 4.3}{14}{The method to inform the theory solver used by \opensmt about a constraint}{figure.4.3}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {\relax 4.4}{\ignorespaces The method to assert a literal in a theory solver used by \texttt  {OpenSMT}\xspace  .}}{15}{figure.4.4}}
\newlabel{fig:assertLitnrasolver}{{\relax 4.4}{15}{The method to assert a literal in a theory solver used by \opensmt }{figure.4.4}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {\relax 4.5}{\ignorespaces The method to push a backtrack point in a theory solver used by \texttt  {OpenSMT}\xspace  .}}{15}{figure.4.5}}
\newlabel{fig:pushBacktrackPointnrasolver}{{\relax 4.5}{15}{The method to push a backtrack point in a theory solver used by \opensmt }{figure.4.5}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {\relax 4.6}{\ignorespaces The method to pop a backtrack point in a theory solver used by \texttt  {OpenSMT}\xspace  .}}{16}{figure.4.6}}
\newlabel{fig:popBacktrackPointnrasolver}{{\relax 4.6}{16}{The method to pop a backtrack point in a theory solver used by \opensmt }{figure.4.6}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {\relax 4.7}{\ignorespaces The method to check for consistency in a theory solver used by \texttt  {OpenSMT}\xspace  .}}{16}{figure.4.7}}
\newlabel{fig:checknrasolver}{{\relax 4.7}{16}{The method to check for consistency in a theory solver used by \opensmt }{figure.4.7}{}}
\@writefile{toc}{\contentsline {chapter}{\numberline {5}Implementing further modules}{17}{chapter.5}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\@writefile{lol}{\addvspace {10\p@ }}
\newlabel{chapter:implementingamodule}{{5}{17}{Implementing further modules\relax }{chapter.5}{}}
\@writefile{toc}{\contentsline {section}{\numberline {5.1}Quickstart}{17}{section.5.1}}
\newlabel{fig:rudiimplementation}{{5.1}{18}{Quickstart\relax }{Item.12}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {\relax 5.1}{\ignorespaces The most rudimentary way of a module can be implemented.}}{18}{figure.5.1}}
\newlabel{fig:proposition}{{5.1}{18}{Quickstart\relax }{figure.5.1}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {\relax 5.2}{\ignorespaces Example of how to add a proposition to \texttt  {Formula.h}.}}{18}{figure.5.2}}
\@writefile{toc}{\contentsline {section}{\numberline {5.2}Members of a modul}{18}{section.5.2}}
\newlabel{fig:notSolvableBy}{{5.1}{19}{Quickstart\relax }{figure.5.2}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {\relax 5.3}{\ignorespaces How to extend the method \texttt  {Formula::notSolvableBy} in \texttt  {Formula.cpp}.}}{19}{figure.5.3}}
\@writefile{toc}{\contentsline {section}{\numberline {5.3}Virtual interfaces}{20}{section.5.3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.3.1}Informing about a constraint}{20}{subsection.5.3.1}}
\newlabel{fig:exa_inform}{{5.3.1}{20}{Informing about a constraint\relax }{subsection.5.3.1}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {\relax 5.4}{\ignorespaces Example showing how to implement the method \texttt  {inform}}}{20}{figure.5.4}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.3.2}Adding a constraint}{20}{subsection.5.3.2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.3.3}Checking for consistency}{20}{subsection.5.3.3}}
\newlabel{fig:exa_addconstraint}{{5.3.2}{21}{Adding a constraint\relax }{subsection.5.3.2}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {\relax 5.5}{\ignorespaces Example showing how to implement the method \texttt  {addConstraint}}}{21}{figure.5.5}}
\newlabel{fig:exa_isconsistent}{{5.3.3}{21}{Checking for consistency\relax }{subsection.5.3.3}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {\relax 5.6}{\ignorespaces Example showing how to implement the method \texttt  {isConsistent}}}{21}{figure.5.6}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.3.4}Pushing a backtrack point}{21}{subsection.5.3.4}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.3.5}Popping a backtrack point}{21}{subsection.5.3.5}}
\newlabel{fig:exa_pushBacktrackPoint}{{5.3.4}{22}{Pushing a backtrack point\relax }{subsection.5.3.4}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {\relax 5.7}{\ignorespaces Example showing how to implement the method \texttt  {pushBacktrackPoint}}}{22}{figure.5.7}}
\newlabel{fig:exa_popBacktrackPoint}{{5.3.5}{22}{Popping a backtrack point\relax }{subsection.5.3.5}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {\relax 5.8}{\ignorespaces Example showing how to implement the method \texttt  {popBacktrackPoint}}}{22}{figure.5.8}}
\@writefile{toc}{\contentsline {section}{\numberline {5.4}Running the backend module}{22}{section.5.4}}
\newlabel{sec:runbackend}{{5.4}{22}{Running the backend module\relax }{section.5.4}{}}
\@writefile{toc}{\contentsline {chapter}{\numberline {6}Composing a theory solver}{25}{chapter.6}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\@writefile{lol}{\addvspace {10\p@ }}
\newlabel{chapter:composingats}{{6}{25}{Composing a theory solver\relax }{chapter.6}{}}
\@writefile{toc}{\contentsline {section}{\numberline {6.1}Creating a theory solver}{25}{section.6.1}}
\@writefile{lof}{\contentsline {figure}{\numberline {\relax 6.1}{\ignorespaces The implementation of a theory solver without defining the strategy.}}{25}{figure.6.1}}
\newlabel{fig:tsconstructor}{{\relax 6.1}{25}{The implementation of a theory solver without defining the strategy}{figure.6.1}{}}
\@writefile{toc}{\contentsline {section}{\numberline {6.2}Implementing a strategy in a theory solver}{26}{section.6.2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {6.2.1}The strategy}{26}{subsection.6.2.1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {6.2.2}Specifying a strategy in the theory solver}{27}{subsection.6.2.2}}
